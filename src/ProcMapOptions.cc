#include "ProcMapOptions.hh"

ProcMapOptions::ProcMapOptions() {
	ProcMapOptions(0,0);
}

ProcMapOptions::ProcMapOptions(int x, int y)
{
	mXSize = x;
	mYSize = y;
}

ProcMapOptions::~ProcMapOptions() {
}

void ProcMapOptions::addTerrainOption(ProcMapTerrainOption *option)
{
	mTerrainOptions.insert(option);
}

void ProcMapOptions::addSurroundingsOption(ProcMapSurroundingsOption *option)
{
	mSurroundingsOptions.insert(option);
}

void ProcMapOptions::addHeightOption(ProcMapHeightOption *option)
{
	mHeightOptions.insert(option);
}

void ProcMapOptions::addLandscapeOption(ProcMapLandscapeOption *option)
{
	mLandscapeOptions.insert(option);
}

void ProcMapOptions::setSize(int x, int y)
{
	mXSize = x;
	mYSize = y;
}

/**
 * run the configured options
 * @return the map generated by the options
 */
ProcMap ProcMapOptions::runOptions()
{
	ProcMap map = ProcMap(mXSize, mYSize);
	runOptionSet(set<ProcMapOption*>(mSurroundingsOptions.begin(),mSurroundingsOptions.end()), &map);
	runOptionSet(set<ProcMapOption*>(mLandscapeOptions.begin(),mLandscapeOptions.end()), &map);
	runOptionSet(set<ProcMapOption*>(mHeightOptions.begin(),mHeightOptions.end()), &map);
	runOptionSet(set<ProcMapOption*>(mTerrainOptions.begin(),mTerrainOptions.end()), &map);
	return map;
}

/**
 * run a single option set
 * @param optionSet the set of options to run
 */
void ProcMapOptions::runOptionSet(set<ProcMapOption*> optionSet, ProcMap* map)
{
	for(set<ProcMapOption*>::iterator it=optionSet.begin(); it!=optionSet.end(); ++it)
		(**it).runOption(map);
}
